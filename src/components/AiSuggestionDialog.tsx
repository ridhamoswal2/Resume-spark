import React, { useState } from "react";
import { Button } from "@/components/ui/button";
import { Textarea } from "@/components/ui/textarea";
import { DialogFooter } from "@/components/ui/dialog";
import { ResumeData } from "@/lib/resumeData";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Sparkles, CheckCircle2, Clock } from "lucide-react";
import { Badge } from "@/components/ui/badge";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";

interface AiSuggestionDialogProps {
  resumeData: ResumeData;
  onApplySuggestions: (updatedResumeData: ResumeData) => void;
}

export const AiSuggestionDialog: React.FC<AiSuggestionDialogProps> = ({
  resumeData,
  onApplySuggestions,
}) => {
  const [jobDescription, setJobDescription] = useState("");
  const [isGenerating, setIsGenerating] = useState(false);
  const [showSuggestions, setShowSuggestions] = useState(false);
  const [activeTab, setActiveTab] = useState("summary");
  
  // Mock suggestions that would be generated by AI
  const mockSuggestions = {
    summary: {
      original: resumeData.personalInfo.summary,
      suggestion: "Results-driven software developer with 5+ years experience building scalable web applications. Expert in JavaScript ecosystem (React, Node.js) with strong focus on performance optimization and modern development practices. Passionate about creating intuitive user experiences and mentoring junior developers.",
    },
    experience: [
      {
        id: resumeData.experience[0].id,
        original: resumeData.experience[0].description,
        suggestion: "Led development of customer-facing web applications that increased user engagement by 35%. Implemented CI/CD pipelines reducing deployment time by 50% and mentored 4 junior developers who were promoted within 12 months.",
      },
      {
        id: resumeData.experience[1].id,
        original: resumeData.experience[1].description,
        suggestion: "Architected and built responsive web applications using React and Node.js, resulting in 28% faster page load times. Collaborated with design team to implement UI improvements that boosted conversion rates by 15%.",
      },
    ],
    skills: [
      "React Performance Optimization",
      "CI/CD Pipelines",
      "TypeScript",
      "RESTful API Design",
      "Agile Development",
    ],
  };

  const handleGenerateSuggestions = () => {
    setIsGenerating(true);
    
    // Simulate API call delay
    setTimeout(() => {
      setIsGenerating(false);
      setShowSuggestions(true);
    }, 2000);
  };

  const handleApplySuggestions = () => {
    // Create a deep copy of the resume data
    const updatedData = JSON.parse(JSON.stringify(resumeData)) as ResumeData;
    
    // Apply suggestions
    updatedData.personalInfo.summary = mockSuggestions.summary.suggestion;
    
    // Update experience descriptions
    mockSuggestions.experience.forEach(suggestion => {
      const expIndex = updatedData.experience.findIndex(exp => exp.id === suggestion.id);
      if (expIndex !== -1) {
        updatedData.experience[expIndex].description = suggestion.suggestion;
      }
    });
    
    // Add new skills
    const existingSkillNames = new Set(updatedData.skills.map(skill => skill.name));
    mockSuggestions.skills.forEach((skillName, index) => {
      if (!existingSkillNames.has(skillName)) {
        updatedData.skills.push({
          id: `skill${updatedData.skills.length + index + 1}`,
          name: skillName,
          level: 80,
        });
      }
    });
    
    onApplySuggestions(updatedData);
  };

  return (
    <div className="space-y-6">
      {!showSuggestions ? (
        <>
          <div className="space-y-4">
            <div className="bg-amber-50 border border-amber-200 rounded-md px-4 py-3 text-sm text-amber-800 flex items-start gap-2">
              <Clock className="h-5 w-5 text-amber-500 flex-shrink-0 mt-0.5" />
              <div>
                <p className="font-medium">Tailoring your resume for each job significantly increases your chances of getting an interview.</p>
                <p className="mt-1">Copy and paste the job description below to receive AI-powered suggestions specifically tailored to this opportunity.</p>
              </div>
            </div>
            
            <Textarea
              placeholder="Paste job description here..."
              className="min-h-[200px]"
              value={jobDescription}
              onChange={(e) => setJobDescription(e.target.value)}
            />
          </div>
          
          <DialogFooter>
            <Button variant="outline" type="button" onClick={() => setShowSuggestions(true)}>
              Skip this step
            </Button>
            <Button 
              type="button" 
              onClick={handleGenerateSuggestions}
              disabled={isGenerating || !jobDescription.trim()}
              className="gap-2"
            >
              <Sparkles className="h-4 w-4" />
              {isGenerating ? "Generating..." : "Generate Suggestions"}
            </Button>
          </DialogFooter>
        </>
      ) : (
        <>
          <Tabs value={activeTab} onValueChange={setActiveTab}>
            <TabsList className="grid grid-cols-3 mb-4">
              <TabsTrigger value="summary">Summary</TabsTrigger>
              <TabsTrigger value="experience">Experience</TabsTrigger>
              <TabsTrigger value="skills">Skills</TabsTrigger>
            </TabsList>
            
            <TabsContent value="summary" className="space-y-4">
              <Card>
                <CardHeader className="pb-2">
                  <div className="flex justify-between items-start">
                    <div>
                      <CardTitle className="text-lg">Professional Summary</CardTitle>
                      <CardDescription>Enhanced with AI to highlight your strengths</CardDescription>
                    </div>
                    <Badge className="bg-green-100 text-green-800">Recommended</Badge>
                  </div>
                </CardHeader>
                <CardContent>
                  <div className="bg-green-50 border border-green-100 rounded-md p-3 text-green-700 text-sm mb-2">
                    <div className="flex gap-2 items-center font-medium mb-1">
                      <CheckCircle2 className="h-4 w-4 text-green-600" />
                      <span>AI-optimized summary</span>
                    </div>
                    <p>{mockSuggestions.summary.suggestion}</p>
                  </div>
                  
                  <div className="bg-gray-50 border border-gray-200 rounded-md p-3 text-gray-700 text-sm">
                    <div className="flex gap-2 items-center font-medium mb-1">
                      <span>Original summary</span>
                    </div>
                    <p>{mockSuggestions.summary.original}</p>
                  </div>
                </CardContent>
              </Card>
            </TabsContent>
            
            <TabsContent value="experience" className="space-y-4">
              {mockSuggestions.experience.map((exp, index) => (
                <Card key={index}>
                  <CardHeader className="pb-2">
                    <div className="flex justify-between items-start">
                      <div>
                        <CardTitle className="text-lg">{resumeData.experience[index].company}</CardTitle>
                        <CardDescription>{resumeData.experience[index].position}</CardDescription>
                      </div>
                      <Badge className="bg-green-100 text-green-800">Recommended</Badge>
                    </div>
                  </CardHeader>
                  <CardContent>
                    <div className="bg-green-50 border border-green-100 rounded-md p-3 text-green-700 text-sm mb-2">
                      <div className="flex gap-2 items-center font-medium mb-1">
                        <CheckCircle2 className="h-4 w-4 text-green-600" />
                        <span>AI-enhanced description</span>
                      </div>
                      <p>{exp.suggestion}</p>
                    </div>
                    
                    <div className="bg-gray-50 border border-gray-200 rounded-md p-3 text-gray-700 text-sm">
                      <div className="flex gap-2 items-center font-medium mb-1">
                        <span>Original description</span>
                      </div>
                      <p>{exp.original}</p>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </TabsContent>
            
            <TabsContent value="skills" className="space-y-4">
              <Card>
                <CardHeader className="pb-2">
                  <div className="flex justify-between items-start">
                    <div>
                      <CardTitle className="text-lg">Recommended Skills</CardTitle>
                      <CardDescription>Based on your profile and job market demand</CardDescription>
                    </div>
                    <Badge className="bg-green-100 text-green-800">Recommended</Badge>
                  </div>
                </CardHeader>
                <CardContent>
                  <div className="bg-green-50 border border-green-100 rounded-md p-3 text-green-700 text-sm">
                    <div className="flex gap-2 items-center font-medium mb-2">
                      <CheckCircle2 className="h-4 w-4 text-green-600" />
                      <span>Suggested skills to add</span>
                    </div>
                    <div className="flex flex-wrap gap-2">
                      {mockSuggestions.skills.map((skill, index) => (
                        <Badge key={index} className="bg-white border-green-200 text-green-800 hover:bg-green-50">
                          {skill}
                        </Badge>
                      ))}
                    </div>
                  </div>
                </CardContent>
              </Card>
            </TabsContent>
          </Tabs>
          
          <DialogFooter>
            <Button variant="outline" type="button" onClick={() => setShowSuggestions(false)}>
              Back
            </Button>
            <Button type="button" onClick={handleApplySuggestions} className="gap-2">
              <Sparkles className="h-4 w-4" />
              Apply Suggestions
            </Button>
          </DialogFooter>
        </>
      )}
    </div>
  );
};

export default AiSuggestionDialog; 